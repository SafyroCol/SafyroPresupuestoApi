// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafyroPresupuestos.Data;

#nullable disable

namespace SafyroPresupuestos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.BitacoraPresupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("BitacorasPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.CapituloPresupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubtotalEquipos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubtotalManoObra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubtotalMateriales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubtotalOtros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCapitulo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CapituloPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.CategoriaMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasMaterial");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dominio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.EquipoDepreciacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEquipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorResidual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VidaUtilMeses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("EquiposDepreciacion");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.EquipoPresupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EquipoDepreciacionId")
                        .HasColumnType("int");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoDepreciacionId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("EquipoPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.EquipoRealPresupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostoReal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EquipoPresupuestoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoPresupuestoId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("EquipoRealPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.ManoObra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoHora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("HorasTrabajadas")
                        .HasColumnType("int");

                    b.Property<int>("TipoManoObraId")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoManoObraId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoManoObraId1");

                    b.ToTable("ManosObra");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.ManoObraPresupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManoObraId")
                        .HasColumnType("int");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManoObraId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("ManoObraPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CategoriaMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaMaterialId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.MaterialPresupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadDeMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("MaterialPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.MaterialRealPresupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostoReal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaterialPresupuestoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaterialRealPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Partida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<Guid?>("PartidaPadreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartidaPadreId");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.PartidaPresupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CapituloPresupuestoId")
                        .HasColumnType("int");

                    b.Property<Guid>("PartidaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapituloPresupuestoId");

                    b.HasIndex("PartidaId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("PartidaPresupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.PermisoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVO");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MODULO");

                    b.Property<string>("Permiso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PERMISO");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("USUARIO_ID");

                    b.Property<string>("UsuarioId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("PERMISO_USUARIO");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Presupuestos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Indirectos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Iva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubtotalEquipos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubtotalManoObra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubtotalMateriales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubtotalOtros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Utilidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MonedaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.ResumenFinanciero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoTotalEquipos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotalManoObra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotalMateriales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IngresosEstimados")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("ResumenesFinancieros");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.TipoEquipo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EquipoDepreciacionId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoDepreciacionId");

                    b.ToTable("TiposEquipo");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.TipoManoObra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposManoObra");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SafyroPresupuestos.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SafyroPresupuestos.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SafyroPresupuestos.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SafyroPresupuestos.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.BitacoraPresupuesto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.EquipoDepreciacion", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.EquipoPresupuesto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.EquipoDepreciacion", "EquipoDepreciacion")
                        .WithMany()
                        .HasForeignKey("EquipoDepreciacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EquipoDepreciacion");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.EquipoRealPresupuesto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.EquipoPresupuesto", "EquipoPresupuesto")
                        .WithMany()
                        .HasForeignKey("EquipoPresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipoPresupuesto");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.ManoObra", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.TipoManoObra", "TipoManoObra")
                        .WithMany()
                        .HasForeignKey("TipoManoObraId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("TipoManoObra");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.ManoObraPresupuesto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.ManoObra", "ManoObra")
                        .WithMany()
                        .HasForeignKey("ManoObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ManoObra");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Material", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.CategoriaMaterial", "CategoriaMaterial")
                        .WithMany()
                        .HasForeignKey("CategoriaMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaMaterial");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.MaterialPresupuesto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Partida", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Partida", "PartidaPadre")
                        .WithMany()
                        .HasForeignKey("PartidaPadreId");

                    b.Navigation("PartidaPadre");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.PartidaPresupuesto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.CapituloPresupuesto", null)
                        .WithMany("Partidas")
                        .HasForeignKey("CapituloPresupuestoId");

                    b.HasOne("SafyroPresupuestos.Entities.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Partida");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.PermisoUsuario", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId1");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Presupuestos", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Moneda", "Moneda")
                        .WithMany("Presupuestos")
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafyroPresupuestos.Entities.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moneda");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Proyecto", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Empresa", "Empresa")
                        .WithMany("Proyectos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.ResumenFinanciero", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Presupuestos", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.TipoEquipo", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.EquipoDepreciacion", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoDepreciacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Usuario", b =>
                {
                    b.HasOne("SafyroPresupuestos.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.CapituloPresupuesto", b =>
                {
                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Empresa", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("SafyroPresupuestos.Entities.Moneda", b =>
                {
                    b.Navigation("Presupuestos");
                });
#pragma warning restore 612, 618
        }
    }
}
